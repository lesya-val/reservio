generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SYSTEM_ADMIN     @map("SYSTEM_ADMIN")
  RESTAURANT_ADMIN @map("RESTAURANT_ADMIN")
  EMPLOYEE         @map("EMPLOYEE")
}

model Restaurant {
  id           Int     @id @default(autoincrement())
  name         String
  address      String
  phone        String
  email        String?
  workingHours String?
  isActive     Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users   User[] // Связь с сотрудниками
  adminId Int?   @unique // ID администратора (опционально, если админ еще не назначен)
  admin   User?  @relation("Admin", fields: [adminId], references: [id])

  @@map("restaurants")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  surname  String
  phone    String?
  email    String
  password String?
  role     Role

  restaurantId Int? // ID ресторана, к которому относится сотрудник
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  // Обратная связь для администратора
  managedRestaurant Restaurant? @relation("Admin")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Флаг для проверки, изменил ли пользователь временный пароль
  isTempPassword Boolean @default(true)

  @@map("users")
}
